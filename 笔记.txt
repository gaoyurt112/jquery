一.jquery语法
1.jquery基本语法

  $('').方法()

2.文档就绪事件
     
  防止文档在未加载完毕前执行jquery代码
  $(document).ready(function(){
   //执行代码
  })

  简单写法
  $(function(){
    //执行代码
  })

二.jquery选择器

  $('div').方法()                   标签选择器
  $('.class').方法()                类选择器
  $('#id').方法()                   id选择器
  $('[type]').方法()                属性选择器   
  $(this).方法()                    选择当前元素
  $('div'.class).方法()             选择类名为class的div元素
  $('div：first').方法()            选择第一个div元素
  $('ul li：first').方法()          选择ul中的第一个li元素
  $('ul li：first-child').方法()    选择所有ul中的第一个li元素
  $('a[target=_blank]').方法()      选择target属性为blank的a元素
  $('a[target=!_blank]').方法()     选择target属性不为blank的a元素
  $('tr:even')                      选择偶数位置的tr元素
  $('tr:odd')                       选择寄数位置的tr元素


三.jquery事件
  1.基本语法

  $('选择器').事件名()

  2.常见事件
  鼠标事件：
  $('button').click(function(){//执行函数})      点击执行函数
  $('button').dbclick(function(){//执行函数})    双击执行函数
  $('div').mouseenter(function(){//执行函数})    鼠标进入执行
  $('div').mouseleave(function(){//执行函数})    鼠标离开执行
  $('div').hover(function(){//执行函数})         鼠标悬停事件

  键盘事件:
  $('button').keypress(function(){//执行函数})   键盘被按下
  $('button').keydown(function(){//执行函数})    键盘按下过程
  $('button').keyup(/function(){//执行函数})     键盘弹起

  表单事件:
  $('input').submit(function(){//执行函数})      提交触发函数
  $('input').change(function(){//执行函数})      元素值发生改变触发函数
  $('input').focus(function(){//执行函数})       获取焦点时触发函数
  $('input').blur(function(){//执行函数})        失去焦点时触发函数

  窗口事件:
  $('window').resize(function(){//执行函数})     窗口大小改变时触发
  $('window').scroll(function(){//执行函数})     滚动指定元素值触发


四.jquery获取内容属性

 $('div').text()   设置或返回所选元素的文本内容
 $('div').html()   设置或返回所选元素的内容包含html元素标签
 $('div').val()    设置或返回表单字段的值

 $('a').attr('herf')     获取a标签herf属性值

五.jquery设置内容和属性

 $('div').text('111')   设置或返回所选元素的文本内容
 $('div').html('<p>1111</p>')   设置或返回所选元素的内容包含html元素标签
 $('div').val('111')    设置或返回表单字段的值

 //回调函数
 $('div').text(function(i,origtext){//执行函数})   回调函数有两个参数：当前元素的索引，以及原始值
 $('div').html(function(i,origtext){//执行函数})


 //设置属性 attr
 $('div').attr('herf','http://baidu.com')

 //设置多个attr
 $('div').attr({
  'herf':'http://baidu.com',
  'title':'11111'
  })

 //attr回调函数
 $('div').attr('herf',function(i,origValue){
  //执行函数
 })


六.添加元素

  $('div').append('内容')     在被选元素的结尾插入内容
  $('div').prepend('内容')    在被选元素的开头插入内容
  $('div').after('内容')      在被选元素之后插入内容
  $('div').before('内容')     在被选元素之前插入内容

  //添加若干新元素
  function appendText(){
    var txt1="<p>文本-1。</p>";              // 使用 HTML 标签创建文本
    var txt2=$("<p></p>").text("文本-2。");  // 使用 jQuery 创建文本
    var txt3=document.createElement("p");
    txt3.innerHTML="文本-3。";               // 使用 DOM 创建文本 text with DOM
    $("body").append(txt1,txt2,txt3);        // 追加新元素
  }
      
  function afterText()
  {
    var txt1="<b>I </b>";                    // 使用 HTML 创建元素
    var txt2=$("<i></i>").text("love ");     // 使用 jQuery 创建元素
    var txt3=document.createElement("big");  // 使用 DOM 创建元素
    txt3.innerHTML="jQuery!";
    $("img").after(txt1,txt2,txt3);          // 在图片后添加文本
  }
 

七.删除元素

  $('#id').remove()                删除被选元素及其子元素
  $('div').empty()                 删除被选元素中的子元素
  $('p').remove('.italic')         过滤被筛元素，删除class为italic的所有p元素


八.获取并设置css类
  1.操作css
  $('div').addClass('类名 类名')      向指定元素或不同元素添加一个类或多个类
  $('div').removeClass('类名 类名')   向指定元素或不同元素删除一个类或多个类
  $('div').toggleClass('类名 类名')   对被选元素进行添加/删除类的切换操作


七.jquery css()方法
  1.返回css属性
  $('p').css('background-color')     返回指定css属性的值

  2.设置css属性
  $('p').css('background-color','yellow')  设置指定css属性的值

  3.设置多个css属性
  $('p').css({'background-color','yellow'，'font-size':'200%'})


八.jquery尺寸

  $("#div1").width()        设置或返回元素的宽度（不包括内边距、边框或外边距）
  $("#div1").height()       设置或返回元素的高度（不包括内边距、边框或外边距）
  
  $("#div1").innerWidth()   返回元素的宽度（包括内边距）
  $("#div1").innerHeight()  回元素的高度（包括内边距）

  $("#div1").outerWidth()   返回元素的宽度（包括内边距和边框）
  $("#div1").outerHeight()  返回元素的高度（包括内边距和边框）


九.jquery遍历
  1.遍历祖先
  
  //parent() 方法
  $("span").parent()  返回被选元素的直接父元素

  //parents() 方法
  $("span").parents("ul")  返回被选元素的所有父元素

  //parentsUntil() 方法
  $("span").parentsUntil("div")  返回介于两个给定元素之间的所有祖先元素

  
  2.遍历后代
  //children() 方法

  $("div").children()        返回被选元素的所有直接子元素
  $("div").children('p.1')   返回类名为1的所有p元素，并且是div的直接子元素

  // find() 方法
  $("div").find("span")      返回属于 <div> 后代的所有 <span> 元素
  $("div").find("*")         返回 <div> 的所有后代


  3.遍历同胞

  //siblings() 方法
  $("h2").siblings()        返回 <h2> 的所有同胞元素
  $("h2").siblings("p")     返回属于 <h2> 的同胞元素的所有 <p> 元素

  //next() 方法
  $("h2").next()            返回 <h2> 的下一个同胞元素


  //nextAll() 方法
  $("h2").nextAll()         返回 <h2> 的所有跟随的同胞元素

  //nextUntil() 方法
  $("h2").nextUntil("h6")   返回介于 <h2> 与 <h6> 元素之间的所有同胞元素


  //prev(), prevAll() & prevUntil() 方法
  prev(), prevAll() 以及 prevUntil() 方法的工作方式与上面的方法类似，只不过方向相反而已：它们返回的是前面的同胞元素
  （在 DOM 树中沿着同胞之前元素遍历，而不是之后元素遍历）。


  4. 遍历过滤
  //first() 方法
  $("div p").first()       选取首个 <div> 元素内部的第一个 <p> 元素
  
  //last() 方法
  $("div p").last()        选择最后一个 <div> 元素中的最后一个 <p> 元素    

  //eq() 方法
  $("p").eq(1)             选取第二个 <p> 元素（索引号 1）

  //filter() 方法
  $("p").filter(".url")    返回带有类名 "url" 的所有 <p> 元素

  //not() 方法
  $("p").not(".url")       返回不带有类名 "url" 的所有 <p> 元素



十.jquery Ajax

  1. AJAX get() 和 post() 方法

  //$.get()方法
  语法:
  $.get(URL,callback)
  $.get( URL [, data ] [, callback ] [, dataType ] )

  实例:
  $.get("url",function(data,status){
    alert("数据: " + data + "状态: " + status);
  });


  //$.post() 方法
  语法:
  $.post(URL,callback); 
  $.post( URL [, data ] [, callback ] [, dataType ] )

  实例:
   $.post("/try/ajax/demo_test_post.php",
    {
        name:"name",
        url:"url"
    },
    function(data,status){
        alert("数据: \n" + data + "\n状态: " + status);
    });



十一.jquery效果

  1.显示与隐藏
  $("p").hide()
  $("p").show()

  语法:
  $(selector).hide(speed,type,callback)   speed："slow"、"fast" 或毫秒  type:过度使用哪种缓动函数（jQuery自身提供"linear" 和 "swing"）  callback:为显示或隐藏后需要执行的函数
  $(selector).show(speed,type,callback)

  实例:
  $(".hidebtn").click(function(){
    $("div").hide(1000,"linear",function(){
      alert("Hide() 方法已完成!");
    });
  });

  toggle()方法
  $("p").toggle()   切换 hide() 和 show() 方法



  2.淡入淡出
  speed："slow"、"fast" 或毫秒 callback:为显示或隐藏后需要执行的函数
  $(selector).fadeIn(speed,callback)      淡入
  $(selector).fadeOut(speed,callback)     淡出 
  $(selector).fadeToggle(speed,callback)  在 fadeIn() 与 fadeOut() 方法之间进行切换

  fadeTo() 方法
  $(selector).fadeTo(speed,opacity,callback)    允许渐变为给定的不透明度（值介于 0 与 1 之间）


  3.滑动
  speed："slow"、"fast" 或毫秒 callback:为显示或隐藏后需要执行的函数
  $(selector).slideDown(speed,callback)    向下滑动元素
  $(selector).slideUp(speed,callback)      向上滑动元素
  $(selector).slideToggle(speed,callback)  在 slideDown() 与 slideUp() 方法之间进行切换


  4.动画

    1.animate() 方法
  $(selector).animate({params},speed,callback)    params 参数定义形成动画的 CSS 属性 speed 参数规定效果的时长。它可以取以下值："slow"、"fast" 或毫秒

  实例:
  $("div").animate({left:'250px'}，slow)


    2.animate()操作多个属性
  $("div").animate({
    left:'250px',
    opacity:'0.5',
    height:'150px',
    width:'150px'
  });

    3.animate()使用相对值  该值相对于元素的当前值
  $("div").animate({
    left:'250px',
    height:'+=150px',
    width:'+=150px'
  });

    4.animate()使用预定义的值  可以把属性的动画值设置为 "show"、"hide" 或 "toggle"
  $("div").animate({
    height:'toggle'
  });

    5.animate()使用队列功能  jQuery 会创建包含这些方法调用的"内部"队列。然后逐一运行这些 animate 调用。
    var div=$("div");
    div.animate({height:'300px',opacity:'0.4'},"slow");
    div.animate({width:'300px',opacity:'0.8'},"slow");
    div.animate({height:'100px',opacity:'0.4'},"slow");
    div.animate({width:'100px',opacity:'0.8'},"slow");

  
  5.停止动画
  stop() 方法
  $(selector).stop(stopAll,goToEnd) stopAll 参数规定是否应该清除动画队列。goToEnd 参数规定是否立即完成当前动画  默认都为 false

  实例:
  $("#panel").stop()


  6.Callback 方法

  以下实例在隐藏效果完全实现后回调函数:
  $("p").hide("slow",function(){
    alert("段落现在被隐藏了");
  });
  
  
  以下实例没有回调函数，警告框会在隐藏效果完成前弹出
  $("button").click(function(){
  $("p").hide(1000);
  alert("段落现在被隐藏了");
});


  6.jQuery 方法链接

  方法链接允许我们在相同的元素上运行多条 jQuery 命令，一条接着另一条
  $("#p1").css("color","red").slideUp(2000).slideDown(2000);

  实例:
  $("#p1").css("color","red")
  .slideUp(2000)
  .slideDown(2000);


  
